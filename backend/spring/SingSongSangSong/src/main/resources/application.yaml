spring:
  application:
    name: SingSongSangSong
  servlet:
    session:
      cookie:
        same-site: none
        secure: true
        domain: singsongsangsong.com
    multipart:
      maxFileSize: 100MB
      maxRequestSize: 100MB

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    defer-datasource-initialization: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google-client-id}
            client-secret: ${google-client-secret}
            scope: profile, email
            redirect-uri: https://api.singsongsangsong.com/login/oauth2/code/google
          naver:
            client-id: ${naver-client-id}
            client-secret: ${naver-client-secret}
            redirect-uri: http://api.singsongsangsong.com/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email,profile_image
            client-name: Naver
          kakao:
            client-id: ${kakao-client-id}
            client-secret: ${kakao-client-secret}
            redirect-uri: http://api.singsongsangsong.com/login/oauth2/code/kakao
            scope:
              - account_email
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: Kakao

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
    singsongsangsong:
      redirect-uri: https://www.singsongsangsong.com/

  sql:
    init:
      mode: always
  
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${datasource.url}
    username: ${datasource.username}
    password: ${datasource.password}
  data:
    mongodb:
      uri: ${datasource.nosql.uri}

  output:
    ansi:
      enabled: always
  batch:
    jdbc:
      initialize-schema: always

jwt:
  secretKey: ${jwt.secret}

  access:
    expiration: 3600000 # 1??(60?) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization

synology:
  host: ${nas.host}
  account: ${nas.account}
  passwd: ${nas.passwd}
  baseDir: ${nas.baseDir}

minio:
  endpoint: ${object-storage.endpoint}
  accessKey: ${object-storage.accessKey}
  secretKey: ${object-storage.secretKey}
  serviceName: s3

csv:
  file:
    dir:
      "./csv/"

logging:
  level:
    org:
      springframework:
        mvc: TRACE
        test:
          context:
            cache: DEBUG

webclient:
  baseUrl: https://dsp.singsongsangsong.com
  contentType: application/json
